name: Deploy to Vercel

on:
  push:
    branches: [main]
    paths:
      - 'api/**'
      - 'data/**'
      - 'scripts/**'
      - 'package.json'
      - 'vercel.json'
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
    paths:
      - 'api/**'
      - 'data/**'
      - 'scripts/**'
      - 'package.json'
      - 'vercel.json'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
        
    steps:
      # 检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # 设置Node.js环境
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      # 安装依赖
      - name: Install Dependencies
        run: npm ci
      
      # 验证数据文件
      - name: Verify Data Files
        run: |
          if [ ! -f "data/IP2LOCATION-LITE-DB1.CSV" ]; then
            echo "Warning: IP2LOCATION-LITE-DB1.CSV not found"
            echo "Please download the file from: https://lite.ip2location.com/database/ip-country"
          else
            echo "Data file found: $(ls -lh data/IP2LOCATION-LITE-DB1.CSV)"
          fi
      
      # 构建优化索引
      - name: Build Optimized Index
        run: npm run build
        continue-on-error: true
      
      # 运行测试
      - name: Run Tests
        run: npm test
        continue-on-error: true
      
      # 安装Vercel CLI
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
      
      # Pull Vercel环境信息
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      
      # 构建项目
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      
      # 部署到Preview环境 (Pull Request)
      - name: Deploy to Preview
        if: github.event_name == 'pull_request'
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "PREVIEW_URL=$url" >> $GITHUB_ENV
          echo "### 🚀 Preview Deployment" >> $GITHUB_STEP_SUMMARY
          echo "Preview URL: $url" >> $GITHUB_STEP_SUMMARY
      
      # 部署到Production环境 (Push to main)
      - name: Deploy to Production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          url=$(vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "PRODUCTION_URL=$url" >> $GITHUB_ENV
          echo "### ✅ Production Deployment" >> $GITHUB_STEP_SUMMARY
          echo "Production URL: $url" >> $GITHUB_STEP_SUMMARY
      
      # 测试部署的API
      - name: Test Deployed API
        if: always()
        run: |
          if [ -n "$PREVIEW_URL" ]; then
            TEST_URL=$PREVIEW_URL
          elif [ -n "$PRODUCTION_URL" ]; then
            TEST_URL=$PRODUCTION_URL
          else
            echo "No deployment URL found, skipping API tests"
            exit 0
          fi
          
          echo "Testing API at: $TEST_URL"
          
          # 测试健康检查端点
          echo "Testing health endpoint..."
          curl -f "$TEST_URL/health" || echo "Health check failed"
          
          # 测试单IP查询
          echo "Testing single IP lookup..."
          curl -f "$TEST_URL/api/lookup?ip=8.8.8.8" || echo "Single IP lookup failed"
          
          # 测试批量查询
          echo "Testing batch lookup..."
          curl -f -X POST "$TEST_URL/api/batch" \
            -H "Content-Type: application/json" \
            -d '{"ips":["8.8.8.8","1.1.1.1"]}' || echo "Batch lookup failed"
      
      # 添加PR评论
      - name: Comment PR
        if: github.event_name == 'pull_request' && env.PREVIEW_URL != ''
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview Deployment Ready**\n\n📍 **Preview URL:** ${process.env.PREVIEW_URL}\n\n### 🧪 API Endpoints\n- Health Check: \`${process.env.PREVIEW_URL}/health\`\n- Single IP: \`${process.env.PREVIEW_URL}/api/lookup?ip=8.8.8.8\`\n- Batch Query: \`${process.env.PREVIEW_URL}/api/batch\`\n\n### ⚡ Performance\n- **Single Query**: ~50-100ms\n- **Batch Query**: Optimized for up to 500 IPs\n- **Global CDN**: Vercel Edge Network\n\n✅ Deployment completed successfully!`
            })

  # 代码质量检查作业
  code-quality:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      # 代码格式检查
      - name: Code Format Check
        run: |
          echo "Checking code format..."
          # 这里可以添加ESLint或Prettier检查
          
      # 安全漏洞扫描
      - name: Security Audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      # 检查包大小
      - name: Bundle Size Check
        run: |
          echo "Checking bundle size..."
          du -sh api/ data/ scripts/
